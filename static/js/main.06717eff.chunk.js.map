{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","deleteOnClick","a","delete","name","email","phone","className","onClick","style","cursor","float","color","to","marginRight","Contacts","Fragment","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddContact","errors","onSubmit","e","preventDefault","newContact","post","history","push","target","bind","EditContact","updContact","match","params","put","Header","branding","About","NotFound","Test","title","body","fetch","then","response","json","App","basename","process","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06717eff.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) =>{\r\n    switch( action.type ){\r\n        case 'DELETE_CONTACT':\r\n            return{\r\n                ...state,\r\n                contacts: state.contacts.filter( contact => contact.id !== action.payload)\r\n            };\r\n        case 'ADD_CONTACT':\r\n            return{\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            };\r\n        case 'UPDATE_CONTACT':\r\n            return{\r\n                ...state,\r\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport class Provider extends Component {\r\n\r\n    state = {\r\n        contacts:[],\r\n        dispatch: action => \r\n            this.setState(state => reducer(state,action))\r\n        \r\n    };\r\n      \r\n    async componentDidMount(){\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n\r\n        this.setState({contacts: res.data});\r\n    }\r\n        \r\n    render(){\r\n        return (\r\n\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n\r\n        )\r\n    };    \r\n}\r\n\r\nexport const Consumer = Context.Consumer;","\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Consumer} from '../../context';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass Contact extends Component {\r\n\r\n    state = {\r\n        showContactInfo: false\r\n    };\r\n\r\n    deleteOnClick = async (id, dispatch) => {\r\n        await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n        dispatch({type: 'DELETE_CONTACT', payload: id});\r\n    };\r\n\r\n    render(){\r\n        const { id, name, email, phone} = this.props.contact;\r\n        const {showContactInfo} = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return(\r\n                        <div className=\"card card-body mb-3\">\r\n                            <h4>\r\n                                {name} \r\n                                <i onClick={ () => this.setState({showContactInfo: !this.state.showContactInfo})} className=\"fas fa-sort-down\" style={{cursor: 'pointer'}} />\r\n                                <i onClick={ () => this.deleteOnClick(id,dispatch) } className=\"fas fa-times\" style={{cursor: 'poiner', float: 'right', color: 'red'}} />\r\n                                <Link to={`contact/edit/${id}`}>\r\n                                    <i className=\"fas fa-pencil-alt\" style={{cursor:'pointer',float:'right',color:'black',marginRight:'1rem'}}></i>\r\n                                </Link>\r\n                            </h4>\r\n                            { showContactInfo ? (\r\n                                <ul className=\"list-group\">\r\n                                    <li className=\"list-group-item\">Email: {email}</li>\r\n                                    <li className=\"list-group-item\">Phone: {phone}</li> \r\n                                </ul>\r\n                            ) : null }\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>            \r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired,\r\n};\r\n\r\n/* Contacts.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    email: PropTypes.string.isRequired,\r\n    phone: PropTypes.string.isRequired\r\n}; */\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component {\r\n            \r\n    render() {\r\n        return(\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts } = value;\r\n                    return (\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-2\">\r\n                                <span className=\"text-danger\">Contact</span> List\r\n                            </h1>\r\n                            {contacts.map((contact)=> \r\n                                <Contact\r\n                                    key ={contact.id}\r\n                                    contact={contact}\r\n                                />\r\n                            )}\r\n                        </React.Fragment>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames'\r\n\r\n\r\nconst TextInputGroup = ({ label, name, value, placeholder, type, onChange, error }) => {\r\n    return (     \r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}> {label} </label>\r\n            <input\r\n                type={type}\r\n                name={name}\r\n                className={classnames('form-control form-control-lg', {'is-invalid': error })}\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n            { error && \r\n             <div className=\"invalid-feedback\">{error}</div> }\r\n        </div>\r\n    );\r\n};\r\nTextInputGroup.propTypes = {\r\n\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n};\r\n\r\nexport default  TextInputGroup;\r\n","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context'\r\nimport  TextInputGroup  from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {\r\n            name: '',\r\n            email: ''\r\n        }\r\n    };\r\n    onSubmit = async (dispatch, e) =>{\r\n        e.preventDefault();\r\n\r\n        const {name, email, phone} = this.state;\r\n\r\n        // Check for Errors\r\n        if (name === ''){\r\n            this.setState({errors: { name: 'Name is Required'}});\r\n            return;\r\n        }\r\n        if (email === ''){\r\n            this.setState({errors: { email: 'email is Required'}});\r\n            return;\r\n        }\r\n        if (phone === ''){\r\n            this.setState({errors: { phone: 'phone is Required'}});\r\n            return;\r\n        }\r\n            \r\n        const newContact = {\r\n            name: name,\r\n            email: email,\r\n            phone: phone\r\n        }\r\n\r\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\r\n\r\n        dispatch( {type: 'ADD_CONTACT', payload: res.data });\r\n\r\n        // clear the state\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    render() {\r\n        const {name,email,phone,errors} = this.state;\r\n\r\n        return(\r\n            <Consumer>\r\n                {value => {\r\n                    const {dispatch} = value;\r\n\r\n                    return(\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-2\">\r\n                                <span className=\"text-danger\">Add</span> Contact\r\n                            </h1>\r\n                            <div className=\"card mb-3\">\r\n                                <div className=\"card-body\">\r\n                                    <form onSubmit={ this.onSubmit.bind(this, dispatch)}>\r\n                                        <TextInputGroup \r\n                                            label= \"Name\"\r\n                                            name= \"name\"\r\n                                            placeholder= \"Enter Name\"\r\n                                            value= {name}\r\n                                            onChange= {this.onChange}\r\n                                            error={errors.name}\r\n                                        />\r\n                                        <TextInputGroup \r\n                                            label= \"Email\"\r\n                                            name= \"email\"\r\n                                            type= \"email\"\r\n                                            placeholder= \"Enter Email\"\r\n                                            value= {email}\r\n                                            onChange= {this.onChange}\r\n                                            error={errors.email}\r\n                                        />\r\n                                        <TextInputGroup \r\n                                            label= \"Phone\"\r\n                                            name= \"phone\"\r\n                                            placeholder= \"Enter Phone\"\r\n                                            value= {phone}\r\n                                            onChange= {this.onChange}\r\n                                            error={errors.phone}\r\n                                        />\r\n                                        <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\" />\r\n                                    </form>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </React.Fragment>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddContact;","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context'\r\nimport  TextInputGroup  from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {\r\n            name: '',\r\n            email: ''\r\n        }\r\n    };\r\n\r\n    async componentDidMount(){\r\n        const {id} = this.props.match.params;\r\n        \r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n\r\n        const contact = res.data;\r\n         \r\n        this.setState({\r\n            name : contact.name,\r\n            email : contact.email,\r\n            phone: contact.phone\r\n        });\r\n    };\r\n\r\n    onSubmit = async (dispatch, e) =>{\r\n        e.preventDefault();\r\n\r\n        const {name, email, phone} = this.state;\r\n\r\n        // Check for Errors\r\n        if (name === ''){\r\n            this.setState({errors: { name: 'Name is Required'}});\r\n            return;\r\n        }\r\n        if (email === ''){\r\n            this.setState({errors: { email: 'email is Required'}});\r\n            return;\r\n        }\r\n        if (phone === ''){\r\n            this.setState({errors: { phone: 'phone is Required'}});\r\n            return;\r\n        }\r\n\r\n        const updContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        const {id} = this.props.match.params;\r\n\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`,updContact);\r\n\r\n        dispatch({type: 'UPDATE_CONTACT', payload: res.data });\r\n            \r\n        // clear the state\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    render() {\r\n        const {name,email,phone,errors} = this.state;\r\n\r\n        return(\r\n            <Consumer>\r\n                {value => {\r\n                    const {dispatch} = value;\r\n\r\n                    return(\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-2\">\r\n                                <span className=\"text-danger\">Edit</span> Contact\r\n                            </h1>\r\n                            <div className=\"card mb-3\">\r\n                                <div className=\"card-body\">\r\n                                    <form onSubmit={ this.onSubmit.bind(this, dispatch)}>\r\n                                        <TextInputGroup \r\n                                            label= \"Name\"\r\n                                            name= \"name\"\r\n                                            placeholder= \"Update Name\"\r\n                                            value= {name}\r\n                                            onChange= {this.onChange}\r\n                                            error={errors.name}\r\n                                        />\r\n                                        <TextInputGroup \r\n                                            label= \"Email\"\r\n                                            name= \"email\"\r\n                                            type= \"email\"\r\n                                            placeholder= \"Update Email\"\r\n                                            value= {email}\r\n                                            onChange= {this.onChange}\r\n                                            error={errors.email}\r\n                                        />\r\n                                        <TextInputGroup \r\n                                            label= \"Phone\"\r\n                                            name= \"phone\"\r\n                                            placeholder= \"Update Phone\"\r\n                                            value= {phone}\r\n                                            onChange= {this.onChange}\r\n                                            error={errors.phone}\r\n                                        />\r\n                                        <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-light btn-block\" />\r\n                                    </form>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </React.Fragment>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditContact;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n/* import \"../node_modules/bootstrap\";  */\r\nimport \"../../../src/App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Link } from 'react-router-dom'\r\n\r\n const Header = (props) => {\r\n     const {branding} = props;\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-light bg-danger mb-3 py-0\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"navbar-brand\"> {branding} </Link>\r\n                <div>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\"><i className=\"fas fa-home\">Home</i></Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/contact/add\" className=\"nav-link\"><i className=\"fas fa-plus\">Add</i></Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/about\" className=\"nav-link\"><i className=\"fas fa-question\">About</i></Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nHeader.defaultProps = {\r\n    branding: 'My Application'\r\n};\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;","function About(props) {\r\n    \r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact Manager</h1>\r\n            <p className=\"lead\">Simple app to manage contacts</p>\r\n            <p className=\"textr-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    )\r\n}\r\nexport default About;\r\n","import React, { Component } from 'react'\r\n\r\nexport class NotFound extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className=\"display-4\"><span className=\"text-danger\" >404</span> Page not found.</h1>\r\n                <p className=\"lead\">Sorry, that the page does not exist</p>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nclass Test extends Component {\r\n    state = {\r\n        title: '',\r\n        body: ''\r\n    };\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(json => this.setState({\r\n                title: json.title,\r\n                body: json.body\r\n            }));\r\n    }\r\n\r\n    render() {\r\n        const { title, body} = this.state;\r\n        return (\r\n            <div>\r\n                <h1>{title}</h1>\r\n                <p>{body}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Test;","import React, {Component} from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Contacts from './components/contacts/Contacts';\r\nimport AddContact from './components/contacts/AddContact';\r\nimport EditContact from './components/contacts/EditContact';\r\nimport {Provider} from './context';\r\nimport Header from './components/layout/Header';\r\nimport About from './components/pages/About';\r\nimport {NotFound} from './components/pages/NotFound'\r\nimport Test from './components/test/Test'\r\n\r\nclass App extends Component {\r\n  render(){\r\n    return (\r\n      <Provider>\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n          <div className=\"App\">\r\n            <Header branding=\"Contact Manager\"/>\r\n            <div className=\"container\">\r\n              <Switch>\r\n                <Route exact path=\"/\" component={Contacts} />\r\n                <Route exact path=\"/contact/add\" component={AddContact} />\r\n                <Route exact path=\"/contact/add/:any\" component={NotFound} />\r\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\r\n                <Route exact path=\"/test/\" component={Test} />\r\n                <Route exact path=\"/about/\" component={About}/>\r\n                <Route exact path=\"/about/:any\" component={NotFound} />\r\n              </Switch>\r\n            </div>\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}